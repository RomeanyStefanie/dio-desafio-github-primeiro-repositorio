# O que é o GIT

Git é um sistema de controle de versão desenvolvido por Linus Torvalds (o criador do Linux).

Isso significa que qualquer desenvolvedor numa equipe pode gerenciar o código-fonte e seu histórico de mudanças usando ferramentas de linha de comandos de Git – desde que tenha sido concedido o acesso para isso, é claro.

Diferentemente dos sistemas de controle de versão centralizados, o Git oferece ramificações de recursos (ou feature branches). Isso significa que cada engenheiro de software na equipe pode separar uma ramificação de recursos que oferece um repositório local isolado para promover mudanças nos códigos.

Feature branches não afetam a ramificação principal, que é onde o código original do projeto está localizado. Uma vez que as mudanças tenham sido feitas e o código atualizado está pronto, a ramificação pode ser misturada (num processo de merge) com o master branch. É assim que as mudanças no projeto se tornam efetivas.


## COMANDOS BÁSICOS DE GIT:


### GIT CONFIG:


Um dos comandos git mais usados ​​é o git config que pode ser usado para definir valores de configuração específicos do usuário como e-mail, algoritmo preferido para diff, nome de usuário e formato de arquivo etc.


Por exemplo, o seguinte comando pode ser usado para definir o email:

git config --global user.email sam@google.com


### GIT INIT:


Este comando é usado para criar um novo repositório GIT. Uso:

git init


### GIT ADD:


O comando git add pode ser usado para adicionar arquivos ao índice. Por exemplo, o seguinte comando irá adicionar um arquivo chamado temp.txt presente no diretório local para o índice:

git add temp.txt


### GIT CLONE:


O comando git clone é usado para fins de verificação de repositório. Se o repositório estiver em um servidor remoto, use:

git clone alex@93.188.160.58:/path/to/repository

Por outro lado, se uma cópia de trabalho de um repositório local for criada, use:

git clone /path/to/repository


### GIT COMMIT:


O comando git commit é usado para confirmar as alterações na cabeça. Tenha em atenção que quaisquer alterações efetuadas não irão para o repositório remoto. Uso:

git commit –m “coloque sua mensagem aqui”


### GIT STATUS:


O comando git status exibe a lista de arquivos alterados juntamente com os arquivos que ainda não foram adicionados ou confirmados. Uso:

git status


GIT PUSH é outro dos comandos git básicos mais usados.

Um simples envio envia as alterações feitas para o ramo mestre do repositório remoto associado ao diretório de trabalho.

Por exemplo:

git push origin master


### GIT CHECKOUT:


O comando git checkout pode ser usado para criar ramos ou alternar entre eles. Por exemplo, o seguinte cria um novo ramo e muda para ele:

command git checkout -b <branch-name>


Para simplesmente mudar de um ramo para outro, use:

git checkout <branch-name>


### GIT REMOTE:


O comando git remote permite que um usuário se conecte a um repositório remoto. O comando a seguir lista os repositórios remotos atualmente configurados:

git remote –v


Esse comando permite que o usuário se conecte a um servidor remoto:

git remote add origin <93.188.160.58>


### GIT BRANCH:


O comando git branch pode ser usado para listar, criar ou excluir ramos. Para listar todos os ramos presentes no repositório, use:

git branch


Para excluir um ramo:

git branch –d <branch-name>


### GIT PULL:


Para mesclar todas as alterações presentes no repositório remoto para o diretório de trabalho local, o comando pull é usado. Uso:

git pull


### GIT MERGE:


O comando git merge é usado para mesclar uma ramificação no ramo ativo. Uso:

git merge <branch-name>


